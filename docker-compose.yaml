version: '3.4'

services:
  builder.clean-arch:
    container_name: builder.clean-arch
    build: .
    volumes:
      - .:/app
    ports:
      - "5001:5001"

  mysql.clean-arch:
    container_name: mysql.clean-arch
    image: mysql:5.7
    volumes:
      - clean-arch-mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=clean-architecture
      - MYSQL_ROOT_PASSWORD=root

  mongo:
    container_name: mongo.clean-arch
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27017:27017

  zookeeper:
    container_name: zookeeper.clean-arch
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - bubble

  kafka:
    container_name: kafka.clean-arch
    image: confluentinc/cp-kafka:6.0.2
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 2160
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
    volumes:
      - kafka:/var/lib/kafka/data
    networks:
      - bubble

  kafka-ui:
    container_name: kafka-ui.clean-arch
    image: provectuslabs/kafka-ui
    ports:
      - 8099:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - bubble

volumes:
  clean-arch-mysql:
  mongodb_data:
  kafka:

networks:
  bubble:
    external: true
